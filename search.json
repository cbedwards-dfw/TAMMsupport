[{"path":"https://cbedwards-dfw.github.io/TAMMsupport/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 TAMMsupport authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Collin Edwards. Author, maintainer. Ty Garber. Author.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Edwards C, Garber T (2024). TAMMsupport: Streamline working Terminal Area Management Modules. R package version 0.1.0, https://github.com/cbedwards-dfw/TAMMsupport, https://cbedwards-dfw.github.io/TAMMsupport/, https://framverse.r-universe.dev/TAMMsupport.","code":"@Manual{,   title = {TAMMsupport: Streamline working with Terminal Area Management Modules},   author = {Collin Edwards and Ty Garber},   year = {2024},   note = {R package version 0.1.0, https://github.com/cbedwards-dfw/TAMMsupport, https://cbedwards-dfw.github.io/TAMMsupport/},   url = {https://framverse.r-universe.dev/TAMMsupport}, }"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"tammsupport","dir":"","previous_headings":"","what":"Streamline working with Terminal Area Management Modules","title":"Streamline working with Terminal Area Management Modules","text":"goal TAMMsupport provide R-based tools working interpreting Terminal Area Management Module files (https://framverse.github.io/fram_doc/calcs_glossary.html#Terminal_Area_Management_Module_(TAMM)). TAMMsupport part “framverse” R universe packages.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"cheatsheet","dir":"","previous_headings":"","what":"Cheatsheet","title":"Streamline working with Terminal Area Management Modules","text":"want … Summarize visualize key aspects Chinook TAMM? Use tamm_report(). compare two Chinook TAMM files look changes inputs results? Use tamm_diff(). (Comparing Coho TAMM files currently supported, replicate Coho TAMM formatting) compare two Chinook TAMM files (e.g. look across three ocean options) see ER varies stock fishery models? Use tamm_compare(). extract overview sheet info Chinook TAMM? Use read_overview() read_overview_complete(). extract limiting stock complete sheet Chinook TAMM? Use read_limiting_stock() clean_limiting_stock(). desired, use filter_tamm_wa() filter results just Washington fisheries. Trace network cells used formula TAMM (excel file)? Use trace_formula() generate dependency network, make_tracer_network() visualize .","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Streamline working with Terminal Area Management Modules","text":"can install compiled version TAMMsupport R-universe package repository: RTools installed, can also install development version TAMMsupport devtools like : pak like : TAMMsupport depends xldiff package, contains general tools comparing excel files using R. xldiff automatically installed TAMMsupport . xldiff documentation can found : https://github.com/cbedwards-dfw/xldiff. TAMMsupport installed, can use functions including library script, like :","code":"install.packages(\"TAMMsupport\", repos = \"https://framverse.r-universe.dev\") devtools::install_github(\"cbedwards-dfw/TAMMsupport\") pak::pkg_install(\"cbedwards-dfw/TAMMsupport\") library(TAMMsupport)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"tamm_diff","dir":"","previous_headings":"","what":"tamm_diff()","title":"Streamline working with Terminal Area Management Modules","text":"tamm_diff() facilitates comparing outputs inputs two tamm files identifying changes cell values overview, limiting stock complete, input sheets. tamm_diff creates “diff” excel file contains contents three sheets, highlighting changed cells. formatting diff file broadly reflects Chinook TAMM, simpler border highlighting choices. tamm_diff() takes three arguments: names first TAMM file, second tamm file, name give resulting file (cases, name include filepath, relevant). three filenames end “.xlsx”. following example use: default, tamm_diff() rounds percents numbers fish nearest 0.1 (1 decimal place) comparing, rounds numbers expected longer decimanls (e.g. rates, proportions) nearest 0.0001 (4 decimal places). cases, may want solely focus larger changes (e.g. changes whole fish). optional arguments percent.digits, numeric.digits numeric.digits.small control decimal place rounding percents, numbers fish, numbers expected rates proportions, respectively. highlight larger changes, might use Note since typically manage ER nearest 0.1%, unlikely percent.digits value 0 useful. Currently tamm_diff() works well comparing Chinook TAMM files. Comparison Coho TAMM files development – comparison works, output file replicate formatting Coho TAMM, makes reading file unpleasant.","code":"cur.wd = getwd() setwd(\"C:/Users/edwc1477/OneDrive - Washington State Executive Branch Agencies/Documents/WDFW FRAM team work/NOF material/NOF 2024\")  tamm_diff(filename.1 = \"FRAM/Chin1124.xlsx\",           filename.2 = \"NOF 2/Chin2524.xlsx\",           results.name = \"comparison of Chin 1124 vs 2524.xlsx\" )  setwd(cur.wd) tamm_diff(filename.1 = \"FRAM/Chin1124.xlsx\",           filename.2 = \"NOF 2/Chin2524.xlsx\",           results.name = \"comparison of Chin 1124 vs 2524.xlsx\",           percent.digits = 1, numeric.digits = 0, numeric.digits.small = 3 )"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"working-with-limiting-stock-sheet","dir":"","previous_headings":"","what":"Working with limiting stock sheet","title":"Streamline working with Terminal Area Management Modules","text":"read_limiting_stock() reads limiting stock sheet TAMM file applies minimal formatting filtering (notably, combining single table variable stock_type distingish hatchery natural, unmarked natural; giving categorization fisheries). clean_limiting_stock() everything read_limiting stock , filters unmarked naturals, filters AEQ entries, provides results long-form table ready plotting analysis exploitation rates. filter_tamm_wa filters limiting stock dataframe (e.g. output read_limiting_stock clean_limiting_stock) just Washington fisheries. filter_tamm_wa looks species attribute dataframe (line function can included pipe, consistent filtering approaches framrsquared package. Unless add attribute data frame, makes sense call filter_tamm_wa_chin() (chinook TAMMs) filter_tamm_wa_coho() (Coho tamms)","code":"library(ggplot2) library(dplyr) clean_limiting_stock(\"Chin1224.xlsx\") |>    filter_tamm_wa_chin() |>    filter(timestep == \"yr\")   ggplot(aes(x = stock, y = er, fill = Fishery))+     geom_bar(position=\"stack\", stat=\"identity\")"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"tools-in-development","dir":"","previous_headings":"","what":"Tools in development","title":"Streamline working with Terminal Area Management Modules","text":"tools functional, still developed.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"tamm_report","dir":"","previous_headings":"Tools in development","what":"tamm_report()","title":"Streamline working with Terminal Area Management Modules","text":"tamm_report() summarizes key aspects single Chinook TAMM file html report, generated folder summarized TAMM. hood, tamm_report() uses template parameterized quarto report child quarto file help automate creation tabs stock. see underlying quarto files used (e.g., suggest additional edits features), set argument clean = FALSE calling tamm_report(). prevent deletion tamm-visualizer.qmd tamm-visualizer-child.qmd, present folder TAMM report. Future goals include workshopping adding additional summary information based user needs","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"tamm_compare","dir":"","previous_headings":"Tools in development","what":"tamm_compare()","title":"Streamline working with Terminal Area Management Modules","text":"tamm_compare() uses general approach tamm_report(), creates report compare number TAMM files based Yi Xu’s Rmarkdown report compare exploitation rates three ocean options. optional argument fisheries takes numeric vector fishery IDs; visualization stock ERs plot ERs. fisheries provided, stock tamm_compare() create figure impacts fisheries, separate plot impacts SUS fisheries.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"stock-fishery-and-timestep-tables","dir":"","previous_headings":"","what":"Stock, Fishery, and Timestep tables","title":"Streamline working with Terminal Area Management Modules","text":"FRAM TAMM often use stock ID number, fishery ID number, time step number represent stock, fishery, timestep respectively. TAMMsupport includes dataframe versions Stock, Fishery, TimeStep tables Coho Chinook FRAM databases easy reference streamline merging human-readable names dataframes id numbers. dataframes named fishery_chinook_fram, fishery_coho_fram, stock_chinook_fram, stock_coho_fram, timestep_chinook_fram, timestep_coho_fram, associated help files accessible ?fishery_chinook_fram etc. initial rows dataframes shown .","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"stock_chinook_fram","dir":"","previous_headings":"Stock, Fishery, and Timestep tables","what":"stock_chinook_fram","title":"Streamline working with Terminal Area Management Modules","text":"","code":"knitr::kable(head(TAMMsupport::stock_chinook_fram, 5))"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"stock_coho_fram","dir":"","previous_headings":"Stock, Fishery, and Timestep tables","what":"stock_coho_fram","title":"Streamline working with Terminal Area Management Modules","text":"","code":"knitr::kable(head(TAMMsupport::stock_coho_fram, 5))"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"fishery_chinook_fram","dir":"","previous_headings":"Stock, Fishery, and Timestep tables","what":"fishery_chinook_fram","title":"Streamline working with Terminal Area Management Modules","text":"","code":"knitr::kable(head(TAMMsupport::fishery_chinook_fram, 5))"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"fishery_coho_fram","dir":"","previous_headings":"Stock, Fishery, and Timestep tables","what":"fishery_coho_fram","title":"Streamline working with Terminal Area Management Modules","text":"","code":"knitr::kable(head(TAMMsupport::fishery_coho_fram, 5))"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"timestep_chinook_fram","dir":"","previous_headings":"Stock, Fishery, and Timestep tables","what":"timestep_chinook_fram","title":"Streamline working with Terminal Area Management Modules","text":"","code":"knitr::kable(head(TAMMsupport::timestep_chinook_fram, 5))"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/index.html","id":"timestep_coho_fram","dir":"","previous_headings":"Stock, Fishery, and Timestep tables","what":"timestep_coho_fram","title":"Streamline working with Terminal Area Management Modules","text":"","code":"knitr::kable(head(TAMMsupport::timestep_coho_fram, 5))"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/address_parser.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse excel address including sheet — address_parser","title":"Parse excel address including sheet — address_parser","text":"Helper function parse full excel address sheet, row, column. Removes ' sheet names. given cell range, returns address first cell.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/address_parser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse excel address including sheet — address_parser","text":"","code":"address_parser(address)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/address_parser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse excel address including sheet — address_parser","text":"address Character string excel address, including sheet.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/address_parser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse excel address including sheet — address_parser","text":"list, $sheet giving sheet name, $rows givng row number, $cols giving column number.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/address_parser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse excel address including sheet — address_parser","text":"","code":"address_parser(\"SPS!AS3\") #> $sheet #> [1] \"SPS\" #>  #> $rows #> [1] 3 #>  #> $cols #> [1] 45 #>  address_parser(\"'Input Page'!$B$30\") #> $sheet #> [1] \"Input Page\" #>  #> $rows #> [1] 30 #>  #> $cols #> [1] 2 #>"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/chunk_formater_percenter.html","id":null,"dir":"Reference","previous_headings":"","what":"Format chunks of dataframe to present as %s, round digits — chunk_formater_percenter","title":"Format chunks of dataframe to present as %s, round digits — chunk_formater_percenter","text":"Format chunks dataframe present %s, round digits","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/chunk_formater_percenter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format chunks of dataframe to present as %s, round digits — chunk_formater_percenter","text":"","code":"chunk_formater_percenter(df, block.ranges, percent.digits = 1)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/chunk_formater_percenter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format chunks of dataframe to present as %s, round digits — chunk_formater_percenter","text":"df dataframe sheet apply formatting . block.ranges vector characters specifying blocks cells (excel nomenclature) format %s percent.digits Decimal place round percent","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/chunk_formater_percenter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format chunks of dataframe to present as %s, round digits — chunk_formater_percenter","text":"Formatted version df","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/chunk_formater_rounder.html","id":null,"dir":"Reference","previous_headings":"","what":"Format chunks of dataframe to round digits — chunk_formater_rounder","title":"Format chunks of dataframe to round digits — chunk_formater_rounder","text":"Format chunks dataframe round digits","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/chunk_formater_rounder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format chunks of dataframe to round digits — chunk_formater_rounder","text":"","code":"chunk_formater_rounder(df, block.ranges, digits = 1)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/chunk_formater_rounder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format chunks of dataframe to round digits — chunk_formater_rounder","text":"df dataframe sheet apply formatting . block.ranges vector characters specifying blocks cells (excel nomenclature) format %s digits Decimal place round .","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/chunk_formater_rounder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format chunks of dataframe to round digits — chunk_formater_rounder","text":"Formatted version df","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/clean_limiting_stock.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates clean read of TAMM limiting stock sheet — clean_limiting_stock","title":"Generates clean read of TAMM limiting stock sheet — clean_limiting_stock","text":"Effectively wrapper function read_limiting_stock formatting added . Filters unmarked naturals, just present ER values.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/clean_limiting_stock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates clean read of TAMM limiting stock sheet — clean_limiting_stock","text":"","code":"clean_limiting_stock(filename)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/clean_limiting_stock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates clean read of TAMM limiting stock sheet — clean_limiting_stock","text":"filename Name (path) TAMM files","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/clean_limiting_stock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates clean read of TAMM limiting stock sheet — clean_limiting_stock","text":"dataframe","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/filter_tamm_wa.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters a dataframe to Washington State fisheries. — filter_tamm_wa","title":"Filters a dataframe to Washington State fisheries. — filter_tamm_wa","text":"Adapted framrsquared::filter_wa(), () Chinook (present), (b) uses TAMM fishery ids, includes ids 72 73. Includes code COHO based FRAM ids. filter_tamm_wa() uses attributes specify chinook coho. directly filter chinook coho, use filter_tamm_wa_chin() filter_tamm_wa_coho().","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/filter_tamm_wa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters a dataframe to Washington State fisheries. — filter_tamm_wa","text":"","code":"filter_tamm_wa(.data)  filter_tamm_wa_chin(.data)  filter_tamm_wa_coho(.data)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/filter_tamm_wa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters a dataframe to Washington State fisheries. — filter_tamm_wa","text":".data Dataframe generated within package","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/filter_tamm_wa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filters a dataframe to Washington State fisheries. — filter_tamm_wa","text":"fishery_id column name.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/filter_tamm_wa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filters a dataframe to Washington State fisheries. — filter_tamm_wa","text":"","code":"if (FALSE) { # \\dontrun{ fram_dataframe |> filter_wa() } # }"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/find_color_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify all cells in Excel sheet or sheets with matching cell colors — find_color_matches","title":"Identify all cells in Excel sheet or sheets with matching cell colors — find_color_matches","text":"Designed tracking status TAMM inputs, typically color coded. Searches specified sheet sheets, looking cells whose colors match target_cell argument. Returns condensed list entries.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/find_color_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify all cells in Excel sheet or sheets with matching cell colors — find_color_matches","text":"","code":"find_color_matches(file, target_cell, sheets = \"Input Page\")"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/find_color_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify all cells in Excel sheet or sheets with matching cell colors — find_color_matches","text":"file Character string excel file name, including path relevant target_cell Character string excel address cell cell shading interest (e.g., \"B4\") sheets character string character vector sheets search ","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/find_color_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify all cells in Excel sheet or sheets with matching cell colors — find_color_matches","text":"tibble summarizing entries color interest, including sheet, row column ids, row name (entry first column sheet)","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/find_color_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify all cells in Excel sheet or sheets with matching cell colors — find_color_matches","text":"","code":"if (FALSE) { # \\dontrun{ file = \"chin tamms/Chin2023_Final.xlsx\" find_color_matches(file, \"B20\") } # }"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fishery_chinook_fram.html","id":null,"dir":"Reference","previous_headings":"","what":"Chinook fishery information — fishery_chinook_fram","title":"Chinook fishery information — fishery_chinook_fram","text":"Mapping fishery_id fishery name Chinook salmon, taken Fishery table Chinook FRAM database.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fishery_chinook_fram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chinook fishery information — fishery_chinook_fram","text":"","code":"fishery_chinook_fram"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fishery_chinook_fram.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chinook fishery information — fishery_chinook_fram","text":"data frame 74 rows 5 columns: species Species name version_number  fishery_id Chinook fishery id number FRAM fishery_name Chinook fishery name FRAM fishery_title consistent human readable version fishery_name","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fishery_chinook_fram.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Chinook fishery information — fishery_chinook_fram","text":"2024 Pre-Season Chinook DB.mdb","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fishery_coho_fram.html","id":null,"dir":"Reference","previous_headings":"","what":"Coho fishery information — fishery_coho_fram","title":"Coho fishery information — fishery_coho_fram","text":"Mapping fishery_id fishery name Coho salmon, taken Fishery table Coho FRAM database.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fishery_coho_fram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coho fishery information — fishery_coho_fram","text":"","code":"fishery_coho_fram"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fishery_coho_fram.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Coho fishery information — fishery_coho_fram","text":"data frame 198 rows 5 columns: species Species name version_number  fishery_id Coho fishery id number FRAM fishery_name Coho fishery name FRAM fishery_title consistent human readable version fishery_name","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fishery_coho_fram.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Coho fishery information — fishery_coho_fram","text":"2024NOF_CohoFRAMdatabase_distribution.mdb","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fishery_renamer.html","id":null,"dir":"Reference","previous_headings":"","what":"relabel inconsistent fishery names in FRAM/TAMM — fishery_renamer","title":"relabel inconsistent fishery names in FRAM/TAMM — fishery_renamer","text":"argument sep = TRUE, return data frame separate columns area \"class\" (Net, Troll, Sport)","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fishery_renamer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"relabel inconsistent fishery names in FRAM/TAMM — fishery_renamer","text":"","code":"fishery_renamer(x, sep = FALSE)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fishery_renamer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"relabel inconsistent fishery names in FRAM/TAMM — fishery_renamer","text":"x character vector fishery names TAMM FRAM sep return dataframe separate column class fishing? Defaults FALSE","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fishery_renamer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"relabel inconsistent fishery names in FRAM/TAMM — fishery_renamer","text":"#vector cleaned fishery names dataframe cleaned name ($full), area without fishery type ($area) type fishery ($class).","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/format_key_tamm_sheets_chin.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify list of Chinook TAMM spreadsheet dataframes to facilitate comparison. — format_key_tamm_sheets_chin","title":"Modify list of Chinook TAMM spreadsheet dataframes to facilitate comparison. — format_key_tamm_sheets_chin","text":"Modify list Chinook TAMM spreadsheet dataframes facilitate comparison.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/format_key_tamm_sheets_chin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify list of Chinook TAMM spreadsheet dataframes to facilitate comparison. — format_key_tamm_sheets_chin","text":"","code":"format_key_tamm_sheets_chin(   dat,   percent.digits = 1,   numeric.digits = 1,   numeric.digits.small = 4 )"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/format_key_tamm_sheets_chin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify list of Chinook TAMM spreadsheet dataframes to facilitate comparison. — format_key_tamm_sheets_chin","text":"dat list dataframes corresponding overview, limiting stock, inputs tabs. Must named $overview, $limiting, $input percent.digits Optional, number decimal places round percentages comparison. Defaults 1. numeric.digits Optional, number decimal places round non-percentage numerics comparison. Applied numbers expected natural units whole numbers (e.g. numbers fish). Defaults 1. numeric.digits.small Optional, number decimal places round non-percentage numerics comparison. Applied numbers expected small (e.g. rates, proportions) Defaults 4.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/format_key_tamm_sheets_chin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify list of Chinook TAMM spreadsheet dataframes to facilitate comparison. — format_key_tamm_sheets_chin","text":"list dataframes structure dat, contents modified.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/format_key_tamm_sheets_coho.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify list of Coho TAMM spreadsheet dataframes to facilitate comparison. — format_key_tamm_sheets_coho","title":"Modify list of Coho TAMM spreadsheet dataframes to facilitate comparison. — format_key_tamm_sheets_coho","text":"Modify list Coho TAMM spreadsheet dataframes facilitate comparison.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/format_key_tamm_sheets_coho.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify list of Coho TAMM spreadsheet dataframes to facilitate comparison. — format_key_tamm_sheets_coho","text":"","code":"format_key_tamm_sheets_coho(   dat,   percent.digits = 2,   numeric.digits = 1,   numeric.digits.small = 4 )"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/format_key_tamm_sheets_coho.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify list of Coho TAMM spreadsheet dataframes to facilitate comparison. — format_key_tamm_sheets_coho","text":"dat list dataframes corresponding overview, limiting stock, inputs tabs. Must named $overview, $limiting, $input percent.digits Optional, number decimal places round percentages comparison. Defaults 1. numeric.digits Optional, number decimal places round non-percentage numerics comparison. Applied numbers expected natural units whole numbers (e.g. numbers fish). Defaults 1. numeric.digits.small Optional, number decimal places round non-percentage numerics comparison. Applied numbers expected small (e.g. rates, proportions) Defaults 4.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/format_key_tamm_sheets_coho.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify list of Coho TAMM spreadsheet dataframes to facilitate comparison. — format_key_tamm_sheets_coho","text":"list dataframes structure dat, contents modified.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/format_overview.html","id":null,"dir":"Reference","previous_headings":"","what":"Format TAMM overview for easy printing — format_overview","title":"Format TAMM overview for easy printing — format_overview","text":"Format TAMM overview easy printing","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/format_overview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format TAMM overview for easy printing — format_overview","text":"","code":"format_overview(dat.overview)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/format_overview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format TAMM overview for easy printing — format_overview","text":"dat.overview dataframe TAMM overview page, produced read_overview()","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/format_overview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format TAMM overview for easy printing — format_overview","text":"list formatted data, vector indent information, vector bolding information.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/formula_formater.html","id":null,"dir":"Reference","previous_headings":"","what":"Add spaces to excel formulas for readability — formula_formater","title":"Add spaces to excel formulas for readability — formula_formater","text":"Helper function add spaces excel formulas improve readability. Can also add newlines based character regular expression","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/formula_formater.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add spaces to excel formulas for readability — formula_formater","text":"","code":"formula_formater(x, newline_breakpoint = NULL)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/formula_formater.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add spaces to excel formulas for readability — formula_formater","text":"x Character string containing excel formula newline_breakpoint Pattern identify locations newlines. single character (e.g. \"/\") complex regular expression (e.g., \"[)][*-+/]\" add newline combination end parathesis operator).","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/formula_formater.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add spaces to excel formulas for readability — formula_formater","text":"character string","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/formula_formater.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add spaces to excel formulas for readability — formula_formater","text":"","code":"formula_formater(\"(SUM(A1:A4)*5/11)/(B3-B4)\") #> [1] \"( SUM( A1:A4 ) * 5 / 11 ) / ( B3 - B4 )\" formula_formater(\"(SUM(A1:A4)*5/11)/(B3-B4)\", newline_breakpoint = \"/\") #> [1] \"( SUM( A1:A4 ) * 5 / \\n11 ) / \\n ( B3 - B4 )\" formula_formater(\"(SUM(A1:A4)*5/11)/(B3-B4)\", newline_breakpoint = \"[*-+/]\") #> [1] \"( SUM( A1:A4 ) * \\n5 / \\n11 ) / \\n ( B3 - B4 )\""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fun_percenter.html","id":null,"dir":"Reference","previous_headings":"","what":"Format vector of mixed characters to present numbers as percents — fun_percenter","title":"Format vector of mixed characters to present numbers as percents — fun_percenter","text":"Intended internal use within formatting functions. Note percents excel read proportions R – makes percents make saved files readable.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fun_percenter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format vector of mixed characters to present numbers as percents — fun_percenter","text":"","code":"fun_percenter(x, percent.digits)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fun_percenter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format vector of mixed characters to present numbers as percents — fun_percenter","text":"x Character vector, presumably containing entries numbers character form percent.digits Number digits round converting percents","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fun_percenter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format vector of mixed characters to present numbers as percents — fun_percenter","text":"character vector individual entries converted percentages rounded appropriate.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fun_rounder.html","id":null,"dir":"Reference","previous_headings":"","what":"Format vector of mixed characters to round numbers to specified digits — fun_rounder","title":"Format vector of mixed characters to round numbers to specified digits — fun_rounder","text":"Intended internal use within formatting functions.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fun_rounder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format vector of mixed characters to round numbers to specified digits — fun_rounder","text":"","code":"fun_rounder(x, digits)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/fun_rounder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format vector of mixed characters to round numbers to specified digits — fun_rounder","text":"x Character vector, presumably containing entries numbers character form digits Number digits round numeric items ","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/kable_overview.html","id":null,"dir":"Reference","previous_headings":"","what":"Print table of overview using kable and kableExtra — kable_overview","title":"Print table of overview using kable and kableExtra — kable_overview","text":"Uses output format_overview()","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/kable_overview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print table of overview using kable and kableExtra — kable_overview","text":"","code":"kable_overview(dat.overview, ind.indent, col.bold)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/kable_overview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print table of overview using kable and kableExtra — kable_overview","text":"dat.overview formatted data, first item format_overview() output ind.indent Vector indices need indenting match TAMM overview formatting. Second item format_overview() output col.bold vector names bolding match TAMM overview formatting. Third item format_overview() output.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/kable_overview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print table of overview using kable and kableExtra — kable_overview","text":"html table","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and format edges from traced objects — make_tracer_edges","title":"Calculate and format edges from traced objects — make_tracer_edges","text":"Helper function find references list created within tracer_formula, create simple dataframe representing \"edges\" traced network (, connections cells). Gets called trace_formula() generate $references component output.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and format edges from traced objects — make_tracer_edges","text":"","code":"make_tracer_edges(address_list)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and format edges from traced objects — make_tracer_edges","text":"address_list $raw.tracing component results trace_formula() call.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and format edges from traced objects — make_tracer_edges","text":"tibble. $index cell referenced, $hte index cell referencing $from_name $to_name excel addresses .","code":""},{"path":[]},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize excel formula tracing — make_tracer_network","text":"","code":"make_tracer_network(tracer_list, save_path = NULL, newline_breakpoint = NULL)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize excel formula tracing — make_tracer_network","text":"tracer_list Output trace_formula() call. save_path Optional, defaults NULL. Provide file path + name save html visualization. Make sure file name ends .html. newline_breakpoint Optional character string used add breakpoints formulas improve readability. Can simple character regular expression; See formula_formater details examples.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize excel formula tracing — make_tracer_network","text":"interactive visNetwork object","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize excel formula tracing — make_tracer_network","text":"Render dependency network created trace_formula(); optionally save interactive .html.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize excel formula tracing — make_tracer_network","text":"","code":"if (FALSE) { # \\dontrun{ trace_network = trace_formula(path = \"NOF material/NOF 2024/NOF 2/Chin1624.xlsx\", cell.start = \"SPSmrkd!AS20\") make_tracer_network(trace_network) } # }"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"List cells and contents from traced objects — make_tracer_nodes","title":"List cells and contents from traced objects — make_tracer_nodes","text":"Helper function parse list created within trace_formula tibble cell represented row. Called trace_formula() generate $cells component output.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List cells and contents from traced objects — make_tracer_nodes","text":"","code":"make_tracer_nodes(address_list)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List cells and contents from traced objects — make_tracer_nodes","text":"address_list $raw.tracing component results trace_formula() call.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/make_tracer_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List cells and contents from traced objects — make_tracer_nodes","text":"tibble summarizing cell tracing. See trace_formula() details.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/quick_er_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick helper function to format vectors that contain text and ERs — quick_er_format","title":"Quick helper function to format vectors that contain text and ERs — quick_er_format","text":"Quick helper function format vectors contain text ERs","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/quick_er_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick helper function to format vectors that contain text and ERs — quick_er_format","text":"","code":"quick_er_format(x)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/quick_er_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick helper function to format vectors that contain text and ERs — quick_er_format","text":"x character vector","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/range_splitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate excel-style cell range to vector of cell addresses. — range_splitter","title":"Translate excel-style cell range to vector of cell addresses. — range_splitter","text":"Primarily intended helper function trace_formula(), useful excel tasks. Drops $ ' symbols addresses simplify parsing.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/range_splitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate excel-style cell range to vector of cell addresses. — range_splitter","text":"","code":"range_splitter(address)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/range_splitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate excel-style cell range to vector of cell addresses. — range_splitter","text":"address Character string excel cell range, \"B10:C15\" \"'Input Sheet'!AS30:AS40\"","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/range_splitter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate excel-style cell range to vector of cell addresses. — range_splitter","text":"vector individual excel-style cell addresses within range","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/range_splitter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate excel-style cell range to vector of cell addresses. — range_splitter","text":"","code":"range_splitter(\"B10:C15\") #>  [1] \"B10\" \"B11\" \"B12\" \"B13\" \"B14\" \"B15\" \"C10\" \"C11\" \"C12\" \"C13\" \"C14\" \"C15\" range_splitter(\"'Input Sheet'!$AS30:$AS40\") #>  [1] \"'Input Sheet'!AS30\" \"'Input Sheet'!AS31\" \"'Input Sheet'!AS32\" #>  [4] \"'Input Sheet'!AS33\" \"'Input Sheet'!AS34\" \"'Input Sheet'!AS35\" #>  [7] \"'Input Sheet'!AS36\" \"'Input Sheet'!AS37\" \"'Input Sheet'!AS38\" #> [10] \"'Input Sheet'!AS39\" \"'Input Sheet'!AS40\""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_key_tamm_sheets_chin.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Chinook TAMM files to extract the key sheets — read_key_tamm_sheets_chin","title":"Read Chinook TAMM files to extract the key sheets — read_key_tamm_sheets_chin","text":"Read Chinook TAMM files extract key sheets","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_key_tamm_sheets_chin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Chinook TAMM files to extract the key sheets — read_key_tamm_sheets_chin","text":"","code":"read_key_tamm_sheets_chin(xlsxFile)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_key_tamm_sheets_chin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Chinook TAMM files to extract the key sheets — read_key_tamm_sheets_chin","text":"xlsxFile #Tamm file name","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_key_tamm_sheets_chin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Chinook TAMM files to extract the key sheets — read_key_tamm_sheets_chin","text":"List dataframes: $overview, $limiting, $input","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_key_tamm_sheets_coho.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Chinook TAMM files to extract the key sheets — read_key_tamm_sheets_coho","title":"Read Chinook TAMM files to extract the key sheets — read_key_tamm_sheets_coho","text":"Read Chinook TAMM files extract key sheets","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_key_tamm_sheets_coho.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Chinook TAMM files to extract the key sheets — read_key_tamm_sheets_coho","text":"","code":"read_key_tamm_sheets_coho(xlsxFile)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_key_tamm_sheets_coho.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Chinook TAMM files to extract the key sheets — read_key_tamm_sheets_coho","text":"xlsxFile #Tamm file name","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_key_tamm_sheets_coho.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Chinook TAMM files to extract the key sheets — read_key_tamm_sheets_coho","text":"List dataframes: $two, $tami, $wacoast","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_limiting_stock.html","id":null,"dir":"Reference","previous_headings":"","what":"Read TAMM limiting stock complete tab — read_limiting_stock","title":"Read TAMM limiting stock complete tab — read_limiting_stock","text":"Reads table, adds fishery type information.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_limiting_stock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read TAMM limiting stock complete tab — read_limiting_stock","text":"","code":"read_limiting_stock(filename, longform = FALSE)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_limiting_stock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read TAMM limiting stock complete tab — read_limiting_stock","text":"filename Tamm name (path) longform results long form (good R stuff) (TRUE) replicate structure TAMM sheet (FALSE). Logical, defaults FALSE.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_limiting_stock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read TAMM limiting stock complete tab — read_limiting_stock","text":"data frame summarizing TAMM limiting stock tab.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_management_chin.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and format management criterion from Chinook TAMM — read_management_chin","title":"Extract and format management criterion from Chinook TAMM — read_management_chin","text":"Extract format management criterion Chinook TAMM","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_management_chin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and format management criterion from Chinook TAMM — read_management_chin","text":"","code":"read_management_chin(file)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_management_chin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and format management criterion from Chinook TAMM — read_management_chin","text":"file filename, including filepath appropriate","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_management_chin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and format management criterion from Chinook TAMM — read_management_chin","text":"Tibble, $management_name giving name management criteria specified TAMM, $management_criteria giving list dataframes associated management criteria, formatted appropriately, $notes giving list character vectors notes () help interpret criteria.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_management_chin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and format management criterion from Chinook TAMM — read_management_chin","text":"","code":"if (FALSE) { # \\dontrun{ cur.management = read_management_chin(\"Code Inputs/Pre-Season/TAMMs/2013_Final W_BP7.1.xlsx\") } # }"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_overview.html","id":null,"dir":"Reference","previous_headings":"","what":"Read overview sheet from TAMM and return key stock — read_overview","title":"Read overview sheet from TAMM and return key stock — read_overview","text":"Read overview sheet TAMM return key stock","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_overview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read overview sheet from TAMM and return key stock — read_overview","text":"","code":"read_overview(path)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_overview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read overview sheet from TAMM and return key stock — read_overview","text":"path filename (including path) Chinook TAMM","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_overview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read overview sheet from TAMM and return key stock — read_overview","text":"dataframe","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_overview_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"Read overview sheet from TAMM and return all stock — read_overview_complete","title":"Read overview sheet from TAMM and return all stock — read_overview_complete","text":"stock column overview tab uses R-unfriendly approaches store season, overall stock name, individual stocks stock column TAMM. read_overview_complete splits separate columns: season, primary_stock, stock. three stock (Green, Puyallup, Skokomish), tamm presents model predictions across two rows single stock name due merged cells. stock column output preserves information; entry corresponding second row suffix \"_row2\".","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_overview_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read overview sheet from TAMM and return all stock — read_overview_complete","text":"","code":"read_overview_complete(path)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_overview_complete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read overview sheet from TAMM and return all stock — read_overview_complete","text":"path filename (including path) Chinook TAMM","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_overview_complete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read overview sheet from TAMM and return all stock — read_overview_complete","text":"Dataframe containing infomration cells A2:H34 \"ER_ESC_Overview_New\" sheet.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_tnt_allocation_chin.html","id":null,"dir":"Reference","previous_headings":"","what":" — read_tnt_allocation_chin","title":" — read_tnt_allocation_chin","text":"Extract Treaty Nontreaty numbers \"2A_CU&M_H+N\" TAMM sheet. Elwha Dungeoness, separate allocations calculated using column O JDF tab","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_tnt_allocation_chin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":" — read_tnt_allocation_chin","text":"","code":"read_tnt_allocation_chin(xlsxFile)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_tnt_allocation_chin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":" — read_tnt_allocation_chin","text":"xlsxFile Character vector. Filename (including path) chinook TAMM","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_tnt_allocation_chin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":" — read_tnt_allocation_chin","text":"dataframe treaty nontreaty mortalities stock.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/read_tnt_allocation_chin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":" — read_tnt_allocation_chin","text":"Currently provides dataframe stock.original column identifying stock based names TAMM, stock.clean human-readable names (generally consistent stock names, like used label management criterion).","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/reformat_management.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function for formatting TAMM management criterion chunks — reformat_management","title":"Convenience function for formatting TAMM management criterion chunks — reformat_management","text":"Internal tool simplify converting TAMM sheet stock management criterion lists. See read_management_chin() example use.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/reformat_management.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function for formatting TAMM management criterion chunks — reformat_management","text":"","code":"reformat_management(   df,   cols.percent,   rows.percent = NULL,   rows.header = 2,   notes = NULL )"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/reformat_management.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function for formatting TAMM management criterion chunks — reformat_management","text":"df dataframe trimmed TAMM management page just relevant stock's criterion. cols.percent Column numbers columns converted percents. rows.percent Character vector row sub-stock names identifying rows () translated percents. Defaults NULL. Developed accomodate \"CERC (SUS)\" Snohomish. rows.header many rows used make header? Defaults 2, sometimes header block TAMM 1 row. notes Optional. Character vector, item separate note associated stock. Generally based comments excel doc, can also feed \"extra\" rows TAMM contain caveats.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/reformat_management.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function for formatting TAMM management criterion chunks — reformat_management","text":"Stock management criterion list, containing dataframe extracted TAMM notes hard-coded based TAMM cell comments.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/safe_convert_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert string of number to numeric — safe_convert_numeric","title":"Convert string of number to numeric — safe_convert_numeric","text":"Helper function check atomic string convert numeric contains legal number.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/safe_convert_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert string of number to numeric — safe_convert_numeric","text":"","code":"safe_convert_numeric(x)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/safe_convert_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert string of number to numeric — safe_convert_numeric","text":"x character string","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/safe_convert_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert string of number to numeric — safe_convert_numeric","text":"Input formatted character string numeric","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/safe_convert_numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert string of number to numeric — safe_convert_numeric","text":"","code":"safe_convert_numeric(\"AS20-BC2\") #> [1] \"AS20-BC2\" safe_convert_numeric(\"10.5\") #> [1] 10.5"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/stock_chinook_fram.html","id":null,"dir":"Reference","previous_headings":"","what":"Chinook stock information — stock_chinook_fram","title":"Chinook stock information — stock_chinook_fram","text":"Mapping stock_id stock name Chinook salmon, taken Stock table Chinook FRAM database.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/stock_chinook_fram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chinook stock information — stock_chinook_fram","text":"","code":"stock_chinook_fram"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/stock_chinook_fram.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chinook stock information — stock_chinook_fram","text":"data frame 78 rows 7 columns: species Species name stock_version  stock_id Chinook stock id number FRAM production_region_number  management_unit_number  stock_name Chinook stock name FRAM stock_long_name stock_name human readable","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/stock_chinook_fram.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Chinook stock information — stock_chinook_fram","text":"2024 Pre-Season Chinook DB.mdb","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/stock_coho_fram.html","id":null,"dir":"Reference","previous_headings":"","what":"Coho stock information — stock_coho_fram","title":"Coho stock information — stock_coho_fram","text":"Mapping stock_id stock name Coho salmon, taken Stock table Coho FRAM database.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/stock_coho_fram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coho stock information — stock_coho_fram","text":"","code":"stock_coho_fram"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/stock_coho_fram.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Coho stock information — stock_coho_fram","text":"data frame 78 rows 7 columns: species Species name stock_version  stock_id Coho stock id number FRAM production_region_number  management_unit_number  stock_name Coho stock name FRAM stock_long_name stock_name human readable","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/stock_coho_fram.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Coho stock information — stock_coho_fram","text":"2024NOF_CohoFRAMdatabase_distribution.mdb","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate summary comparison of any number of TAMM files — tamm_compare","title":"Generate summary comparison of any number of TAMM files — tamm_compare","text":"Intended use case compare low, mid, high ocean option.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate summary comparison of any number of TAMM files — tamm_compare","text":"","code":"tamm_compare(   tamm.names,   tamm.path = getwd(),   fisheries = NULL,   clean = TRUE,   overwrite = TRUE )"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate summary comparison of any number of TAMM files — tamm_compare","text":"tamm.names character vector three tamm files compare (including .xlsx suffix). tamm.path Absolute path directory containing tamm file. ::() can useful identifying appropriate path. Character atomic; defaults current working directory. fisheries Optional, numeric vector fishery IDs filter plotting fishery-specific ER stock. Defaults NULL (filtering). clean intermediate .qmd files used make report deleted afterwards? Logical, defaults TRUE. Set FALSE explore .qmd files underlying report. overwrite intermediate .qmd files final report overwritten files already exist?; Logical, defaults TRUE.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate summary comparison of any number of TAMM files — tamm_compare","text":"Nothing","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate summary comparison of any number of TAMM files — tamm_compare","text":"","code":"if (FALSE) { # \\dontrun{ tamm.path <- \"C:/Users/edwc1477/Documents/WDFW FRAM team work/NOF material/NOF 2024/FRAM\" tamm.names <- c(\"Chin1024.xlsx\", \"Chin1124.xlsx\", \"Chin1224.xlsx\") tamm_compare3(tamm.names = tamm.names, tamm.path = tamm.path) } # }"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_compare3.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate summary comparison of 3 TAMM files — tamm_compare3","title":"Generate summary comparison of 3 TAMM files — tamm_compare3","text":"Intended use case compare low, mid, high ocean option.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_compare3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate summary comparison of 3 TAMM files — tamm_compare3","text":"","code":"tamm_compare3(tamm.names, tamm.path = getwd(), clean = TRUE, overwrite = TRUE)"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_compare3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate summary comparison of 3 TAMM files — tamm_compare3","text":"tamm.names character vector three tamm files compare (including .xlsx suffix). tamm.path Absolute path directory containing tamm file. ::() can useful identifying appropriate path. Character atomic; defaults current working directory. clean intermediate .qmd files used make report deleted afterwards? Logical, defaults TRUE. Set FALSE explore .qmd files underlying report. overwrite intermediate .qmd files final report overwritten files already exist?; Logical, defaults TRUE.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_compare3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate summary comparison of 3 TAMM files — tamm_compare3","text":"Nothing","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_compare3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate summary comparison of 3 TAMM files — tamm_compare3","text":"","code":"if (FALSE) { # \\dontrun{ tamm.path <- \"C:/Users/edwc1477/Documents/WDFW FRAM team work/NOF material/NOF 2024/FRAM\" tamm.names <- c(\"Chin1024.xlsx\", \"Chin1124.xlsx\", \"Chin1224.xlsx\") tamm_compare3(tamm.names = tamm.names, tamm.path = tamm.path) } # }"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare key sheets of TAMM files — tamm_diff","title":"Compare key sheets of TAMM files — tamm_diff","text":"Compare key sheets TAMM files","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare key sheets of TAMM files — tamm_diff","text":"","code":"tamm_diff(   filename.1,   filename.2,   results.name,   percent.digits = 1,   numeric.digits = 1,   numeric.digits.small = 4,   dim.override = FALSE,   wrap.text = FALSE )"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare key sheets of TAMM files — tamm_diff","text":"filename.1 name first TAMM file compare. Include file path file working directory. filename.2 name second TAMM file compare. Include file path file working directory. results.name name output sheets. Include file path save location working directory. percent.digits Number decimals round percentages comparing. Defaults 1. numeric.digits Number decimals round numbers comparing. Applied cells expect whole numbers (e.g. #s fish). Defaults 1. numeric.digits.small Number decimals round numbers comparing. Applied cells expect small decimals. Defaults 4. dim.override force comparisons even one sheets matching dimensions two files? Defaults FALSE. wrap.text specific cells long contents (e.g., input \"Fishery Description\" cells) use text wrapping? Defaults FALSE","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_diff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare key sheets of TAMM files — tamm_diff","text":"TAMM formatting changes (e.g. addition rows, etc), make changes following areas: read_key_tamm_sheets_SPECIES(): range argument read_excel call change match new dimensions sheet. format_key_tamm_sheets_SPECIES(): functions designate groups cells Depending sheets change, amount content may need change. case inputs tab section, cell ranges can reported directly. Remember separately designating cells rounded nearest numeric.digits (generally measures fish) rounded nearest numeric.digits.small (generall proportions rates; typically values less 1.). Note earlier code written flexible chunk_formater_percenter chunk_formater_rounder developed. rewriting, lean tools, streamline designating regions cells various rounding criterion. tamm_format_SHEETNAME() (sheet formatting functions relevant species): individual sheet custom formatting generally match corresponding TAMM sheets. locations cells move, changes font size, addition borders, etc, also need move. Note tamm_format_limiting tamm_format_overview written development flexible add_cell_borders, combined use purrr::map cell_range_translate. Look tamm_format_input relatively inputting formatting. Consider developing helper functions needed (esp merging).","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare key sheets of TAMM files — tamm_diff","text":"","code":"if (FALSE) { # \\dontrun{ tamm_diff(   filename.1 = here(\"FRAM/Chin1124.xlsx\"),   filename.2 = here(\"NOF 2/Chin2524.xlsx\"),   results.name = here(\"Chin 1124 vs Chin 2524.xlsx\") ) } # }"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_diff_chin.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare key sheets of Chinook TAMM files — tamm_diff_chin","title":"Compare key sheets of Chinook TAMM files — tamm_diff_chin","text":"Compare key sheets Chinook TAMM files","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_diff_chin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare key sheets of Chinook TAMM files — tamm_diff_chin","text":"","code":"tamm_diff_chin(   filename.1,   filename.2,   results.name,   percent.digits = 1,   numeric.digits = 1,   numeric.digits.small = 4,   dim.override = FALSE,   wrap.text = FALSE )"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_diff_chin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare key sheets of Chinook TAMM files — tamm_diff_chin","text":"filename.1 name first TAMM file compare. Include file path file working directory. filename.2 name second TAMM file compare. Include file path file working directory. results.name name output sheets. Include file path save location working directory. percent.digits Number decimals round percentages comparing. Defaults 1. numeric.digits Number decimals round numbers comparing. Applied cells expect whole numbers (e.g. #s fish). Defaults 1. numeric.digits.small Number decimals round numbers comparing. Applied cells expect small decimals. Defaults 4. dim.override force comparisons even one sheets matching dimensions two files? Defaults FALSE. wrap.text specific cells long contents (e.g., input \"Fishery Description\" cells) use text wrapping? Defaults FALSE","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_diff_coho.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare key sheets of Coho TAMM files — tamm_diff_coho","title":"Compare key sheets of Coho TAMM files — tamm_diff_coho","text":"Compare key sheets Coho TAMM files","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_diff_coho.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare key sheets of Coho TAMM files — tamm_diff_coho","text":"","code":"tamm_diff_coho(   filename.1,   filename.2,   results.name,   percent.digits = 2,   numeric.digits = 1,   numeric.digits.small = 4,   dim.override = FALSE,   wrap.text = FALSE )"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_diff_coho.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare key sheets of Coho TAMM files — tamm_diff_coho","text":"filename.1 name first TAMM file compare. Include file path file working directory. filename.2 name second TAMM file compare. Include file path file working directory. results.name name output sheets. Include file path save location working directory. percent.digits Number decimals round percentages comparing. Defaults 1. numeric.digits Number decimals round numbers comparing. Applied cells expect whole numbers (e.g. #s fish). Defaults 1. numeric.digits.small Number decimals round numbers comparing. Applied cells expect small decimals. Defaults 4. dim.override force comparisons even one sheets matching dimensions two files? Defaults FALSE. wrap.text specific cells long contents (e.g., input \"Fishery Description\" cells) use text wrapping? Defaults FALSE","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_format_sheets.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply final formatting to diff'd TAMM sheets — tamm_format_sheets","title":"Apply final formatting to diff'd TAMM sheets — tamm_format_sheets","text":"Functions add formatting broadly replicate formatting TAMM sheets. Colored foregrounds toned help change highlighting pop, complicated superfluous formatting skipped.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_format_sheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply final formatting to diff'd TAMM sheets — tamm_format_sheets","text":"","code":"tamm_format_overview(wb, diff.sheet, tabname = \"overview\")  tamm_format_limiting(wb, tabname = \"limiting\")  tamm_format_input(wb, tabname = \"input\", wrap.text = FALSE)  tamm_format_wacoast(wb, tabname = \"wacoast\")"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_format_sheets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply final formatting to diff'd TAMM sheets — tamm_format_sheets","text":"wb openxlsx workbook object containing $overview, limiting  $input sheets contents diffing two TAMM files. diff.sheet tamm_format_overview, output xldiff::sheet_comp overview tab. Used programmatically bold appropriate ERs based management objective. tabname Name sheet wb modified. Defaults correct value. wrap.text specific cells long content use text wrapping? Defaults FALSE.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate report of figures from TAMM file — tamm_report","title":"Generate report of figures from TAMM file — tamm_report","text":"Generate report figures TAMM file","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate report of figures from TAMM file — tamm_report","text":"","code":"tamm_report(   tamm.name,   tamm.path = getwd(),   clean = TRUE,   overwrite = TRUE,   additional.children = NULL,   additional.support.files = NULL )"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate report of figures from TAMM file — tamm_report","text":"tamm.name Name tamm file (including .xlsx suffix). Character atomic tamm.path Absolute path directory containing tamm file. ::() can useful identifying appropriate path. Character atomic; defaults current working directory. clean intermediate .qmd files used make report deleted afterwards? Logical, defaults TRUE. Set FALSE explore .qmd files underlying report. overwrite intermediate .qmd files final report overwritten files already exist?; Logical, defaults TRUE. additional.children Optional argument filepath(s) additional quarto child documents (see Details). Defaults NULL. additional.support.files Optional argument filepath(s) additional files needed additional quarto documents. Files copied directory TAMM easy reading/use additional.children quarto files, deleted report generated","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate report of figures from TAMM file — tamm_report","text":"Nothing","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/tamm_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate report of figures from TAMM file — tamm_report","text":"function generates summary report single chinook TAMM (Terminal Area Management Module) file. common use case call function tamm, view resulting html report (generated folder TAMM). However, function also provides substantial flexibility form optional user-created child quarto documents, requires additional context develop use. tamm_report implemented using parameterized quarto report child quarto document, included package. resulting report includes broadly useful content – currently, replication overview TAMM sheet bar charts showing breakdown exploitation rates fishery stock listed limiting stock complete TAMM sheet. However, individuals organizations may consistently want additional, specific visualizations based needs. example, individual tribes may want visualize impacts single stock, use AEQ instead ER rates. tamm_report function designed integrate extra components additional.children argument. basic principle individual group can write reusable \"child\" .qmd file, see explanation using Rmarkdown), effectively inserted main report. example, might create simple additional child .qmd file called extra-tamm-child.qmd include small table summarizing key aspects Nooksack Earlies stock. contents file provided example . call tamm_report(), can include argument additional.children =  file name (including file path) new file. way can easily include extra content time create tamm report. desired, multiple child files can created, additional.children can take character vector child file name. writing child documents, formatting chunks work akin copy-pasting section quarto file main file. (easily access main quarto file, run tamm_report() clean = FALSE, leave tamm-visualizer.qmd tamm-visualizer-child.qmd files folder TAMM file). child document access key objects dat.: output read_limiting_stock longform = TRUE called TAMM; dat.overview: output read_overview called TAMM; dat: specific filtered formatted version limiting stock data generated limiting stock tab chunk tamm-visualizer.qmd used generating unmarked natural stock exploitation rate figures. developing child document, may useful create working environment versions dat.dat.overview example TAMM facilitate writing appropriate filters, plot-making code, etc. primary quarto report loads tidyverse, framrsquared, kableExtra, TAMMsupport packages, can include additional packages child documents needed adding library(packagename calls just like context. additional.children files need read contents additional files (call children .qmd files streamline looping stocks fisheries), file paths supplemental files can provided additional.support files argument. files copied folder .qmd files, children quarto files can written access supplemental files without dealing file paths. questions/support developing child documents extend report, contact Collin Edwards WDFW.","code":""},{"path":[]},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/timestep_chinook_fram.html","id":null,"dir":"Reference","previous_headings":"","what":"Chinook timestep information stock information — timestep_chinook_fram","title":"Chinook timestep information stock information — timestep_chinook_fram","text":"Mapping timestep numbers dates year, taken TimeStep table Chinook FRAM database","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/timestep_chinook_fram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chinook timestep information stock information — timestep_chinook_fram","text":"","code":"timestep_chinook_fram"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/timestep_chinook_fram.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chinook timestep information stock information — timestep_chinook_fram","text":"data frame 4 rows 5 columns: species Species name version_number  time_step_id id number time step time_step_name Span timestep. Timesteps start first month, end last month. Note Oct-Apr-2 highlighting timestep 4 runs October current year April NEXT year (equivalent timestep 1 following year). time_step_title time_step_name, months written ","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/timestep_chinook_fram.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Chinook timestep information stock information — timestep_chinook_fram","text":"2024 Pre-Season Chinook DB.mdb","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/timestep_coho_fram.html","id":null,"dir":"Reference","previous_headings":"","what":"Coho timestep information stock information — timestep_coho_fram","title":"Coho timestep information stock information — timestep_coho_fram","text":"Mapping timestep numbers dates year, taken TimeStep table Chinook FRAM database","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/timestep_coho_fram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coho timestep information stock information — timestep_coho_fram","text":"","code":"timestep_coho_fram"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/timestep_coho_fram.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Coho timestep information stock information — timestep_coho_fram","text":"data frame 5 rows 5 columns: species Species name version_number  time_step_id id number time step time_step_name Span timestep. Timesteps start first month, end last month. time_step_title time_step_name, months written consistently","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/timestep_coho_fram.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Coho timestep information stock information — timestep_coho_fram","text":"2024NOF_CohoFRAMdatabase_distribution.mdb","code":""},{"path":[]},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/trace_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trace the calculations of a cell recursively through all referenced cells — trace_formula","text":"","code":"trace_formula(   path,   cell.start,   max.it = 5000,   verbose = TRUE,   split.ranges = FALSE )"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/trace_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trace the calculations of a cell recursively through all referenced cells — trace_formula","text":"path Filepath excel file cell.start Character string intiial cell excel format. MUST include sheet name (e.g. \"SPS!AS20\", \"AS20\") max.Maximum iterations; used failsafe ensure function eventually case circular error. Defaults 5000; increase actual dependency network likely 5000 nodes. verbose Print cell addresses console tracing? Logical, defaults FALSE. split.ranges encountering reference includes cell range, trace backwards cells (TRUE) just first cell range (FALSE)? Logical, defaults FALSE. option added sometimes formulas include sums across large ranges, ballooning size resulting network. building understanding, sometimes sufficient trace representative referenced range, leading smaller simpler plots.","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/trace_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trace the calculations of a cell recursively through all referenced cells — trace_formula","text":"\"trace object\" – list defining dependency network. $cells tibble summarizing cells dependency network, starting cell.start. Within , $id index; $label cell address; $formula formula cell formula, otherwise contents cell, $contents non-formula cell contents (.e., formula present, $contents results formula); $.formula logical identifying cell contains formula, purely numeric / string / etc contents; $addresses.referenced character vector excel addresses $formula, sheet sheet associated current cell. $references tibble summarizing edges dependency network – , references one cell another. $index cell referenced; $index cell referencing; $from_name $to_name excel addresses . $raw.tracing list created tracing forms backbone trace_formula. Intended internal use; $cells $references contains important results .","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/trace_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trace the calculations of a cell recursively through all referenced cells — trace_formula","text":"","code":"if (FALSE) { # \\dontrun{ trace_network = trace_formula(path = \"NOF material/NOF 2024/NOF 2/Chin1624.xlsx\",  cell.start = \"SPSmrkd!AS20\") } # }"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/validate_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Confirm object is dataframe — validate_data_frame","title":"Confirm object is dataframe — validate_data_frame","text":"Confirm object dataframe","code":""},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/validate_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confirm object is dataframe — validate_data_frame","text":"","code":"validate_data_frame(   x,   ...,   arg = rlang::caller_arg(x),   call = rlang::caller_env() )"},{"path":"https://cbedwards-dfw.github.io/TAMMsupport/reference/validate_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confirm object is dataframe — validate_data_frame","text":"x Object check ... additional arguments arg name argument calling function, identified programmatically using rlang call name calling function, identified programmatically using rlang","code":""}]
